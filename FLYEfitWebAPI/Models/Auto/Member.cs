/*
 * Flyefit API
 *
 * This is FLYEfit's API for access it's internal member database
 *
 * OpenAPI spec version: 0.4.0
 * Contact: api@flyefit.ie
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{

    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Member :  IEquatable<Member>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Member" /> class.
        /// </summary>
        /// <param name="MemberId">MemberId.</param>
        /// <param name="FirstName">FirstName.</param>
        /// <param name="LastName">LastName.</param>
        /// <param name="EmailAddress">EmailAddress.</param>
        /// <param name="AccessCode">AccessCode.</param>
        /// <param name="Address1">Address1.</param>
        /// <param name="Address2">Address2.</param>
        /// <param name="Address3">Address3.</param>
        /// <param name="PostCode">PostCode.</param>
        /// <param name="PhoneMobile">PhoneMobile.</param>
        /// <param name="PhoneDaytime">PhoneDaytime.</param>
        /// <param name="HomeGymId">HomeGymId.</param>
        /// <param name="JoinDate">JoinDate.</param>
        /// <param name="GymIntroTaken">GymIntroTaken.</param>
        /// <param name="GymIntroTakenDate">GymIntroTakenDate.</param>
        /// <param name="Title">Title.</param>
        /// <param name="Location">Location.</param>
        /// <param name="Gender">Gender.</param>
        /// <param name="Role">Role.</param>
        /// <param name="Status">Status.</param>
        public Member(int? MemberId = default(int?), string FirstName = default(string), string LastName = default(string), string EmailAddress = default(string), string AccessCode = default(string), string Address1 = default(string), string Address2 = default(string), string Address3 = default(string), string PostCode = default(string), string PhoneMobile = default(string), string PhoneDaytime = default(string), int? HomeGymId = default(int?), DateTime? JoinDate = default(DateTime?), int? GymIntroTaken = default(int?), DateTime? GymIntroTakenDate = default(DateTime?), MemberTitle Title = default(MemberTitle), Location Location = default(Location), Gender Gender = default(Gender), Role Role = default(Role), UserStatus Status = default(UserStatus))
        {
            this.MemberId = MemberId;
            this.FirstName = FirstName;
            this.LastName = LastName;
            this.EmailAddress = EmailAddress;
            this.AccessCode = AccessCode;
            this.Address1 = Address1;
            this.Address2 = Address2;
            this.Address3 = Address3;
            this.PostCode = PostCode;
            this.PhoneMobile = PhoneMobile;
            this.PhoneDaytime = PhoneDaytime;
            this.HomeGymId = HomeGymId;
            this.JoinDate = JoinDate;
            this.GymIntroTaken = GymIntroTaken;
            this.GymIntroTakenDate = GymIntroTakenDate;
            this.Title = Title;
            this.Location = Location;
            this.Gender = Gender;
            this.Role = Role;
            this.Status = Status;
            
        }

        /// <summary>
        /// Gets or Sets MemberId
        /// </summary>
        [DataMember(Name="memberId")]
        public int? MemberId { get; set; }
        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="firstName")]
        public string FirstName { get; set; }
        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="lastName")]
        public string LastName { get; set; }
        /// <summary>
        /// Gets or Sets EmailAddress
        /// </summary>
        [DataMember(Name="emailAddress")]
        public string EmailAddress { get; set; }
        /// <summary>
        /// Gets or Sets AccessCode
        /// </summary>
        [DataMember(Name="accessCode")]
        public string AccessCode { get; set; }
        /// <summary>
        /// Gets or Sets Address1
        /// </summary>
        [DataMember(Name="address1")]
        public string Address1 { get; set; }
        /// <summary>
        /// Gets or Sets Address2
        /// </summary>
        [DataMember(Name="address2")]
        public string Address2 { get; set; }
        /// <summary>
        /// Gets or Sets Address3
        /// </summary>
        [DataMember(Name="address3")]
        public string Address3 { get; set; }
        /// <summary>
        /// Gets or Sets PostCode
        /// </summary>
        [DataMember(Name="postCode")]
        public string PostCode { get; set; }
        /// <summary>
        /// Gets or Sets PhoneMobile
        /// </summary>
        [DataMember(Name="phoneMobile")]
        public string PhoneMobile { get; set; }
        /// <summary>
        /// Gets or Sets PhoneDaytime
        /// </summary>
        [DataMember(Name="phoneDaytime")]
        public string PhoneDaytime { get; set; }
        /// <summary>
        /// Gets or Sets HomeGymId
        /// </summary>
        [DataMember(Name="homeGymId")]
        public int? HomeGymId { get; set; }
        /// <summary>
        /// Gets or Sets JoinDate
        /// </summary>
        [DataMember(Name="joinDate")]
        public DateTime? JoinDate { get; set; }
        /// <summary>
        /// Gets or Sets GymIntroTaken
        /// </summary>
        [DataMember(Name="gymIntroTaken")]
        public int? GymIntroTaken { get; set; }
        /// <summary>
        /// Gets or Sets GymIntroTakenDate
        /// </summary>
        [DataMember(Name="gymIntroTakenDate")]
        public DateTime? GymIntroTakenDate { get; set; }
        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title")]
        public MemberTitle Title { get; set; }
        /// <summary>
        /// Gets or Sets Location
        /// </summary>
        [DataMember(Name="location")]
        public Location Location { get; set; }
        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name="gender")]
        public Gender Gender { get; set; }
        /// <summary>
        /// Gets or Sets Role
        /// </summary>
        [DataMember(Name="role")]
        public Role Role { get; set; }
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status")]
        public UserStatus Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Member {\n");
            sb.Append("  MemberId: ").Append(MemberId).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  AccessCode: ").Append(AccessCode).Append("\n");
            sb.Append("  Address1: ").Append(Address1).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  Address3: ").Append(Address3).Append("\n");
            sb.Append("  PostCode: ").Append(PostCode).Append("\n");
            sb.Append("  PhoneMobile: ").Append(PhoneMobile).Append("\n");
            sb.Append("  PhoneDaytime: ").Append(PhoneDaytime).Append("\n");
            sb.Append("  HomeGymId: ").Append(HomeGymId).Append("\n");
            sb.Append("  JoinDate: ").Append(JoinDate).Append("\n");
            sb.Append("  GymIntroTaken: ").Append(GymIntroTaken).Append("\n");
            sb.Append("  GymIntroTakenDate: ").Append(GymIntroTakenDate).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  Role: ").Append(Role).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != GetType()) return false;
            return Equals((Member)obj);
        }

        /// <summary>
        /// Returns true if Member instances are equal
        /// </summary>
        /// <param name="other">Instance of Member to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Member other)
        {

            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    this.MemberId == other.MemberId ||
                    this.MemberId != null &&
                    this.MemberId.Equals(other.MemberId)
                ) && 
                (
                    this.FirstName == other.FirstName ||
                    this.FirstName != null &&
                    this.FirstName.Equals(other.FirstName)
                ) && 
                (
                    this.LastName == other.LastName ||
                    this.LastName != null &&
                    this.LastName.Equals(other.LastName)
                ) && 
                (
                    this.EmailAddress == other.EmailAddress ||
                    this.EmailAddress != null &&
                    this.EmailAddress.Equals(other.EmailAddress)
                ) && 
                (
                    this.AccessCode == other.AccessCode ||
                    this.AccessCode != null &&
                    this.AccessCode.Equals(other.AccessCode)
                ) && 
                (
                    this.Address1 == other.Address1 ||
                    this.Address1 != null &&
                    this.Address1.Equals(other.Address1)
                ) && 
                (
                    this.Address2 == other.Address2 ||
                    this.Address2 != null &&
                    this.Address2.Equals(other.Address2)
                ) && 
                (
                    this.Address3 == other.Address3 ||
                    this.Address3 != null &&
                    this.Address3.Equals(other.Address3)
                ) && 
                (
                    this.PostCode == other.PostCode ||
                    this.PostCode != null &&
                    this.PostCode.Equals(other.PostCode)
                ) && 
                (
                    this.PhoneMobile == other.PhoneMobile ||
                    this.PhoneMobile != null &&
                    this.PhoneMobile.Equals(other.PhoneMobile)
                ) && 
                (
                    this.PhoneDaytime == other.PhoneDaytime ||
                    this.PhoneDaytime != null &&
                    this.PhoneDaytime.Equals(other.PhoneDaytime)
                ) && 
                (
                    this.HomeGymId == other.HomeGymId ||
                    this.HomeGymId != null &&
                    this.HomeGymId.Equals(other.HomeGymId)
                ) && 
                (
                    this.JoinDate == other.JoinDate ||
                    this.JoinDate != null &&
                    this.JoinDate.Equals(other.JoinDate)
                ) && 
                (
                    this.GymIntroTaken == other.GymIntroTaken ||
                    this.GymIntroTaken != null &&
                    this.GymIntroTaken.Equals(other.GymIntroTaken)
                ) && 
                (
                    this.GymIntroTakenDate == other.GymIntroTakenDate ||
                    this.GymIntroTakenDate != null &&
                    this.GymIntroTakenDate.Equals(other.GymIntroTakenDate)
                ) && 
                (
                    this.Title == other.Title ||
                    this.Title != null &&
                    this.Title.Equals(other.Title)
                ) && 
                (
                    this.Location == other.Location ||
                    this.Location != null &&
                    this.Location.Equals(other.Location)
                ) && 
                (
                    this.Gender == other.Gender ||
                    this.Gender != null &&
                    this.Gender.Equals(other.Gender)
                ) && 
                (
                    this.Role == other.Role ||
                    this.Role != null &&
                    this.Role.Equals(other.Role)
                ) && 
                (
                    this.Status == other.Status ||
                    this.Status != null &&
                    this.Status.Equals(other.Status)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                    if (this.MemberId != null)
                    hash = hash * 59 + this.MemberId.GetHashCode();
                    if (this.FirstName != null)
                    hash = hash * 59 + this.FirstName.GetHashCode();
                    if (this.LastName != null)
                    hash = hash * 59 + this.LastName.GetHashCode();
                    if (this.EmailAddress != null)
                    hash = hash * 59 + this.EmailAddress.GetHashCode();
                    if (this.AccessCode != null)
                    hash = hash * 59 + this.AccessCode.GetHashCode();
                    if (this.Address1 != null)
                    hash = hash * 59 + this.Address1.GetHashCode();
                    if (this.Address2 != null)
                    hash = hash * 59 + this.Address2.GetHashCode();
                    if (this.Address3 != null)
                    hash = hash * 59 + this.Address3.GetHashCode();
                    if (this.PostCode != null)
                    hash = hash * 59 + this.PostCode.GetHashCode();
                    if (this.PhoneMobile != null)
                    hash = hash * 59 + this.PhoneMobile.GetHashCode();
                    if (this.PhoneDaytime != null)
                    hash = hash * 59 + this.PhoneDaytime.GetHashCode();
                    if (this.HomeGymId != null)
                    hash = hash * 59 + this.HomeGymId.GetHashCode();
                    if (this.JoinDate != null)
                    hash = hash * 59 + this.JoinDate.GetHashCode();
                    if (this.GymIntroTaken != null)
                    hash = hash * 59 + this.GymIntroTaken.GetHashCode();
                    if (this.GymIntroTakenDate != null)
                    hash = hash * 59 + this.GymIntroTakenDate.GetHashCode();
                    if (this.Title != null)
                    hash = hash * 59 + this.Title.GetHashCode();
                    if (this.Location != null)
                    hash = hash * 59 + this.Location.GetHashCode();
                    if (this.Gender != null)
                    hash = hash * 59 + this.Gender.GetHashCode();
                    if (this.Role != null)
                    hash = hash * 59 + this.Role.GetHashCode();
                    if (this.Status != null)
                    hash = hash * 59 + this.Status.GetHashCode();
                return hash;
            }
        }

        #region Operators

        public static bool operator ==(Member left, Member right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Member left, Member right)
        {
            return !Equals(left, right);
        }

        #endregion Operators

    }
}
