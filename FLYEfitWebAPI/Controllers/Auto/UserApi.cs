/*
 * Flyefit API
 *
 * This is FLYEfit's API for access it's internal member database
 *
 * OpenAPI spec version: 0.4.0
 * Contact: api@flyefit.ie
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using IO.Swagger.Models;
using Swashbuckle.AspNetCore.SwaggerGen;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public abstract class UserApiController : Controller
    { 

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Returns the list of FLYEfit gyms</remarks>
        /// <response code="200">Gym list found</response>
        [HttpGet]
        [Route("/api/v1/gyms")]
        [SwaggerOperation("GetGyms")]
        [SwaggerResponse(200, type: typeof(GymCollection))]
        public virtual IActionResult GetGyms()
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<GymCollection>(exampleJson)
            : default(GymCollection);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Logs member into the system
        /// </summary>
        /// <remarks></remarks>
        /// <param name="emailAddress">The eMail address to use for login</param>
        /// <param name="password">The password for login in clear text</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Invalid username/password supplied</response>
        [HttpGet]
        [Route("/api/v1/member/login")]
        [SwaggerOperation("MemberLogin")]
        [SwaggerResponse(200, type: typeof(Member))]
        public virtual IActionResult MemberLogin([FromQuery]string emailAddress, [FromQuery]string password)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Member>(exampleJson)
            : default(Member);
            return new ObjectResult(example);
        }
    }
}
